name: Nightly
on:
  schedule:
    # Every day at 1 AM
    - cron: '0 1 * * *'

jobs:
  check_date:
    runs-on: ubuntu-latest
    name: Check latest commit
    outputs:
      should_run: ${{ steps.should_run.outputs.should_run }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - id: should_run
        continue-on-error: true
        name: Check latest commit is less than a day
        if: ${{ github.event_name == 'schedule' }}
        run: test -z $(git rev-list  --after="24 hours"  ${{ github.sha }}) && echo "::set-output name=should_run::false"

  ubuntu:
    runs-on: ubuntu-latest
    needs: check_date
    if: ${{ needs.check_date.outputs.should_run != 'false' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
            python-version: '3.11'

      - name: Install Dependencies
        run: |
            sudo apt update
            sudo apt install git ninja-build libsdl2-dev nasm gcc-multilib mtools
            sudo bash -c "$(wget -O - https://apt.llvm.org/llvm.sh)" llvm 16

      - name: Set up the build environment
        run: ./skift.sh setup && ./skift.sh doctor

      - name: Download third-party dependencies
        run: ./skift.sh install

      - name: Build System Image (efi-x86_64)
        run: ./skift.sh image --format=hdd --prop:branch=nightly

      - name: Read release.md and use it as a body of new release
        id: read_release
        run: ./meta/scripts/dump-body.sh meta/release/nightly.md >> $GITHUB_OUTPUT

      - name: Upload Packages to GitHub
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: .cutekit/images/*.hdd
          tag: "nightly"
          file_glob: true
          overwrite: true
          promote: true
          prerelease: true
          body: ${{ steps.read_release.outputs.RELEASE_BODY }}
